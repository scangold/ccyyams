<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="RealStorageMapper">
	<resultMap id="BaseResultMap" type="com.fh.entity.amsmodel.RealStorage">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Aug 09 
			11:30:22 CST 2016. -->
		<id column="REALSTORAGE_ID" property="realstorageId" jdbcType="INTEGER" />
		<result column="STORAGE_TYPENAME" property="storageTypename"
			jdbcType="NVARCHAR" />
		<result column="STORAGE_NAME" property="storageName" jdbcType="NVARCHAR" />
		<result column="STORAGE_TYPE" property="storageType" jdbcType="NVARCHAR" />
		<result column="VOLUME" property="volume" jdbcType="NVARCHAR" />
		<result column="ACTVOLUME" property="actvolume" jdbcType="NVARCHAR" />
		<result column="UNIT" property="unit" jdbcType="NVARCHAR" />
		<result column="LOCATION" property="location" jdbcType="NVARCHAR" />
		<result column="LIMIT" property="limit" jdbcType="NVARCHAR" />
		<result column="DELETETIME" property="deletetime" jdbcType="NVARCHAR" />
		<result column="DELETEWHY" property="deletewhy" jdbcType="NVARCHAR" />
		<result column="SERANUM" property="seranum" jdbcType="NVARCHAR" />
		<result column="FD_YEAR" property="fdYear" jdbcType="NVARCHAR" />
		<result column="FD_S" property="fdS" jdbcType="NVARCHAR" />
		<result column="FD_G" property="fdG" jdbcType="NVARCHAR" />
		<result column="FD_PAGE" property="fdPage" jdbcType="NVARCHAR" />
		<result column="STORAGE_REMARK" property="storageRemark"
			jdbcType="NVARCHAR" />
		<result column="OTHER1" property="other1" jdbcType="NVARCHAR" />
		<result column="OTHER2" property="other2" jdbcType="NVARCHAR" />
		<result column="OTHER3" property="other3" jdbcType="NVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Aug 09 
			11:30:22 CST 2016. -->
		REALSTORAGE_ID,
		STORAGE_TYPENAME,
		STORAGE_NAME,
		STORAGE_TYPE,
		VOLUME,
		ACTVOLUME,
		UNIT,
		LOCATION,
		LIMIT,
		DELETETIME,
		DELETEWHY,
		SERANUM,
		FD_YEAR,
		FD_S,
		FD_G,
		FD_PAGE,
		STORAGE_REMARK,
		OTHER1,
		OTHER2,
		OTHER3
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Aug 09 
			11:30:22 CST 2016. -->
		select
		<include refid="Base_Column_List" />
		from ams_realstorage
		where REALSTORAGE_ID = #{realstorageId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Aug 09 
			11:30:22 CST 2016. -->
		delete from ams_realstorage
		where REALSTORAGE_ID = #{realstorageId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.fh.entity.amsmodel.RealStorage">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Aug 09 
			11:30:22 CST 2016. -->
		insert into ams_realstorage (REALSTORAGE_ID, STORAGE_TYPENAME,
		STORAGE_NAME, STORAGE_TYPE, VOLUME,
		ACTVOLUME, UNIT, LOCATION,
		LIMIT, DELETETIME, DELETEWHY,
		SERANUM, FD_YEAR, FD_S,
		FD_G, FD_PAGE, STORAGE_REMARK,
		OTHER1, OTHER2, OTHER3
		)
		values (#{realstorageId,jdbcType=INTEGER},
		#{storageTypename,jdbcType=NVARCHAR},
		#{storageName,jdbcType=NVARCHAR}, #{storageType,jdbcType=NVARCHAR},
		#{volume,jdbcType=NVARCHAR},
		#{actvolume,jdbcType=NVARCHAR}, #{unit,jdbcType=NVARCHAR}, #{location,jdbcType=NVARCHAR},
		#{limit,jdbcType=NVARCHAR}, #{deletetime,jdbcType=NVARCHAR},
		#{deletewhy,jdbcType=NVARCHAR},
		#{seranum,jdbcType=NVARCHAR}, #{fdYear,jdbcType=NVARCHAR}, #{fdS,jdbcType=NVARCHAR},
		#{fdG,jdbcType=NVARCHAR}, #{fdPage,jdbcType=NVARCHAR},
		#{storageRemark,jdbcType=NVARCHAR},
		#{other1,jdbcType=NVARCHAR}, #{other2,jdbcType=NVARCHAR}, #{other3,jdbcType=NVARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.fh.entity.amsmodel.RealStorage">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Aug 09 
			11:30:22 CST 2016. -->
		insert into ams_realstorage
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="realstorageId != null">
				REALSTORAGE_ID,
			</if>
			<if test="storageTypename != null">
				STORAGE_TYPENAME,
			</if>
			<if test="storageName != null">
				STORAGE_NAME,
			</if>
			<if test="storageType != null">
				STORAGE_TYPE,
			</if>
			<if test="volume != null">
				VOLUME,
			</if>
			<if test="actvolume != null">
				ACTVOLUME,
			</if>
			<if test="unit != null">
				UNIT,
			</if>
			<if test="location != null">
				LOCATION,
			</if>
			<if test="limit != null">
				LIMIT,
			</if>
			<if test="deletetime != null">
				DELETETIME,
			</if>
			<if test="deletewhy != null">
				DELETEWHY,
			</if>
			<if test="seranum != null">
				SERANUM,
			</if>
			<if test="fdYear != null">
				FD_YEAR,
			</if>
			<if test="fdS != null">
				FD_S,
			</if>
			<if test="fdG != null">
				FD_G,
			</if>
			<if test="fdPage != null">
				FD_PAGE,
			</if>
			<if test="storageRemark != null">
				STORAGE_REMARK,
			</if>
			<if test="other1 != null">
				OTHER1,
			</if>
			<if test="other2 != null">
				OTHER2,
			</if>
			<if test="other3 != null">
				OTHER3,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="realstorageId != null">
				#{realstorageId,jdbcType=INTEGER},
			</if>
			<if test="storageTypename != null">
				#{storageTypename,jdbcType=NVARCHAR},
			</if>
			<if test="storageName != null">
				#{storageName,jdbcType=NVARCHAR},
			</if>
			<if test="storageType != null">
				#{storageType,jdbcType=NVARCHAR},
			</if>
			<if test="volume != null">
				#{volume,jdbcType=NVARCHAR},
			</if>
			<if test="actvolume != null">
				#{actvolume,jdbcType=NVARCHAR},
			</if>
			<if test="unit != null">
				#{unit,jdbcType=NVARCHAR},
			</if>
			<if test="location != null">
				#{location,jdbcType=NVARCHAR},
			</if>
			<if test="limit != null">
				#{limit,jdbcType=NVARCHAR},
			</if>
			<if test="deletetime != null">
				#{deletetime,jdbcType=NVARCHAR},
			</if>
			<if test="deletewhy != null">
				#{deletewhy,jdbcType=NVARCHAR},
			</if>
			<if test="seranum != null">
				#{seranum,jdbcType=NVARCHAR},
			</if>
			<if test="fdYear != null">
				#{fdYear,jdbcType=NVARCHAR},
			</if>
			<if test="fdS != null">
				#{fdS,jdbcType=NVARCHAR},
			</if>
			<if test="fdG != null">
				#{fdG,jdbcType=NVARCHAR},
			</if>
			<if test="fdPage != null">
				#{fdPage,jdbcType=NVARCHAR},
			</if>
			<if test="storageRemark != null">
				#{storageRemark,jdbcType=NVARCHAR},
			</if>
			<if test="other1 != null">
				#{other1,jdbcType=NVARCHAR},
			</if>
			<if test="other2 != null">
				#{other2,jdbcType=NVARCHAR},
			</if>
			<if test="other3 != null">
				#{other3,jdbcType=NVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.fh.entity.amsmodel.RealStorage">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Aug 09 
			11:30:22 CST 2016. -->
		update ams_realstorage
		<set>
			<if test="storageTypename != null">
				STORAGE_TYPENAME = #{storageTypename,jdbcType=NVARCHAR},
			</if>
			<if test="storageName != null">
				STORAGE_NAME = #{storageName,jdbcType=NVARCHAR},
			</if>
			<if test="storageType != null">
				STORAGE_TYPE = #{storageType,jdbcType=NVARCHAR},
			</if>
			<if test="volume != null">
				VOLUME = #{volume,jdbcType=NVARCHAR},
			</if>
			<if test="actvolume != null">
				ACTVOLUME = #{actvolume,jdbcType=NVARCHAR},
			</if>
			<if test="unit != null">
				UNIT = #{unit,jdbcType=NVARCHAR},
			</if>
			<if test="location != null">
				LOCATION = #{location,jdbcType=NVARCHAR},
			</if>
			<if test="limit != null">
				LIMIT = #{limit,jdbcType=NVARCHAR},
			</if>
			<if test="deletetime != null">
				DELETETIME = #{deletetime,jdbcType=NVARCHAR},
			</if>
			<if test="deletewhy != null">
				DELETEWHY = #{deletewhy,jdbcType=NVARCHAR},
			</if>
			<if test="seranum != null">
				SERANUM = #{seranum,jdbcType=NVARCHAR},
			</if>
			<if test="fdYear != null">
				FD_YEAR = #{fdYear,jdbcType=NVARCHAR},
			</if>
			<if test="fdS != null">
				FD_S = #{fdS,jdbcType=NVARCHAR},
			</if>
			<if test="fdG != null">
				FD_G = #{fdG,jdbcType=NVARCHAR},
			</if>
			<if test="fdPage != null">
				FD_PAGE = #{fdPage,jdbcType=NVARCHAR},
			</if>
			<if test="storageRemark != null">
				STORAGE_REMARK = #{storageRemark,jdbcType=NVARCHAR},
			</if>
			<if test="other1 != null">
				OTHER1 = #{other1,jdbcType=NVARCHAR},
			</if>
			<if test="other2 != null">
				OTHER2 = #{other2,jdbcType=NVARCHAR},
			</if>
			<if test="other3 != null">
				OTHER3 = #{other3,jdbcType=NVARCHAR},
			</if>
		</set>
		where REALSTORAGE_ID = #{realstorageId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.fh.entity.amsmodel.RealStorage">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Aug 09 
			11:30:22 CST 2016. -->
		update ams_realstorage
		set STORAGE_TYPENAME = #{storageTypename,jdbcType=NVARCHAR},
		STORAGE_NAME = #{storageName,jdbcType=NVARCHAR},
		STORAGE_TYPE = #{storageType,jdbcType=NVARCHAR},
		VOLUME = #{volume,jdbcType=NVARCHAR},
		ACTVOLUME = #{actvolume,jdbcType=NVARCHAR},
		UNIT = #{unit,jdbcType=NVARCHAR},
		LOCATION = #{location,jdbcType=NVARCHAR},
		LIMIT = #{limit,jdbcType=NVARCHAR},
		DELETETIME = #{deletetime,jdbcType=NVARCHAR},
		DELETEWHY = #{deletewhy,jdbcType=NVARCHAR},
		SERANUM = #{seranum,jdbcType=NVARCHAR},
		FD_YEAR = #{fdYear,jdbcType=NVARCHAR},
		FD_S = #{fdS,jdbcType=NVARCHAR},
		FD_G = #{fdG,jdbcType=NVARCHAR},
		FD_PAGE = #{fdPage,jdbcType=NVARCHAR},
		STORAGE_REMARK = #{storageRemark,jdbcType=NVARCHAR},
		OTHER1 = #{other1,jdbcType=NVARCHAR},
		OTHER2 = #{other2,jdbcType=NVARCHAR},
		OTHER3 = #{other3,jdbcType=NVARCHAR}
		where REALSTORAGE_ID = #{realstorageId,jdbcType=INTEGER}
	</update>





	<!-- 20160809 11:34:01kioor -->

	<sql id="tableName">
		ams_realstorage
	</sql>

	<insert id="save" parameterType="pd">
		insert into
		<include refid="tableName" />
		(
		<include refid="Base_Column_List2" />
		) values (
		<include refid="FieldValueTemp" />
		)

	</insert>

	<insert id="saveByType" parameterType="pd">
		insert into
		<include refid="tableName" />
		(
		<include refid="Base_Column_List2" />
		) values (
		<include refid="FieldValueTemp" />
		)

	</insert>
	<delete id="delete" flushCache="false" parameterType="pd">
		delete from
		<include refid="tableName" />
		where
		REALSTORAGE_ID = #{REALSTORAGE_ID}
	</delete>

	<delete id="deleteByType" flushCache="false" parameterType="pd">
		delete from
		<include refid="tableName" />
		where
		STORAGE_TYPE = #{STORAGE_TYPES}
	</delete>
	<select id="realstoragelistPage" parameterType="page"
		resultType="pd">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="tableName" />
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
			(
				STORAGE_TYPENAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				or
				STORAGE_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				or
				STORAGE_TYPENAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				or
				STORAGE_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				or
				STORAGE_TYPENAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				or
				STORAGE_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				or
				STORAGE_TYPENAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				or
				STORAGE_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				or
				STORAGE_TYPENAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				or
				STORAGE_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			)
			
			

		</if>
		<if test="pd.storagetype!= null and pd.storagetype != ''"><!-- 关键词检索 -->
		and STORAGE_TYPE= #{pd.storagetype}
		
		</if>
		
	</select>
	


	<sql id="Base_Column_List2">

		STORAGE_TYPENAME,
		STORAGE_NAME,
		STORAGE_TYPE,
		VOLUME,
		ACTVOLUME,
		UNIT,
		LOCATION,
		LIMIT,
		DELETETIME,
		DELETEWHY,
		SERANUM,
		FD_YEAR,
		FD_S,
		FD_G,
		FD_PAGE,
		STORAGE_REMARK, OTHER1, OTHER2, OTHER3
	</sql>

	<sql id="FieldValueTemp">
		#{STORAGE_TYPENAME},
		#{STORAGE_NAME},
		#{STORAGE_TYPE},
		#{VOLUME},
		#{ACTVOLUME},
		#{UNIT},
		#{LOCATION},
		#{LIMIT},
		#{DELETETIME},
		#{DELETEWHY},
		#{SERANUM},
		#{FD_YEAR},
		#{FD_S},
		#{FD_G},
		#{FD_PAGE},
		#{STORAGE_REMARK},
		#{OTHER1},
		#{OTHER2},
		#{OTHER3}
	</sql>



	<!-- 通过主键ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select
		<include refid="Base_Column_List"></include>
		from
		<include refid="tableName"></include>
		where
		REALSTORAGE_ID = #{REALSTORAGE_ID}
	</select>

	<!-- 通过名称STORAGE_NAME获取数据 -->
	<select id="findPDByName" parameterType="String" resultType="pd">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="tableName" />
		where
		ams_realstorage.STORAGE_TYPENAME = #{namestring}
	</select>
	<!-- 通过名称STORAGE_NAME获取数据 -->
	<select id="findByName" parameterType="String" resultType="java.lang.Integer">
		select ams_realstorage.REALSTORAGE_ID
		from
		ams_realstorage
		where
		ams_realstorage.STORAGE_TYPENAME = #{namestring}
	</select>

	<!-- 获取总数 -->
	<select id="getRealStorageCount" parameterType="String"
		resultType="pd">
		select
		count(REALSTORAGE_ID) realstorageCount
		from
		<include refid="tableName" />
	</select>

	<select id="storagetypelistPage" parameterType="page"
		resultType="pd">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="tableName" />
		where STORAGE_TYPE = #{pd.STORAGE_TYPE}
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
			(
			STORAGE_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			STORAGE_TYPENAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			)
		</if>
	</select>

		<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
		STORAGE_TYPENAME = #{STORAGE_TYPENAME},
		STORAGE_NAME = #{STORAGE_NAME},
		STORAGE_TYPE = #{STORAGE_TYPE},
		VOLUME = #{VOLUME},
		ACTVOLUME = #{ACTVOLUME},
		UNIT = #{UNIT},
		STORAGE_REMARK = #{STORAGE_REMARK},
		OTHER1 = #{OTHER1}
		
		where
		REALSTORAGE_ID = #{REALSTORAGE_ID}
	</update>
	
	
		<!-- 通过名称STORAGE_TYPENAME获取数据 返回pd-->
	<select id="findByTypeName" parameterType="pd" resultType="pd">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="tableName" />
		where
		ams_realstorage.STORAGE_TYPENAME = #{STORAGE_TYPENAME}
	</select>
	<select id="showRealstoragecount" resultType="pd">
select count(1) as counts,STORAGE_TYPE  from  ams_realstorage group by STORAGE_TYPE
	</select>

</mapper>