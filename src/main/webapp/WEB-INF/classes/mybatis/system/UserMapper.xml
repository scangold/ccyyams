<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">

	<resultMap type="User" id="userAndRoleResultMap">
		<id column="USER_ID" property="USER_ID" />
		<result column="USERNAME" property="USERNAME" />
		<result column="PASSWORD" property="PASSWORD" />
		<result column="NAME" property="NAME" />
		<result column="RIGHTS" property="RIGHTS" />
		<result column="LAST_LOGIN" property="LAST_LOGIN" />
		<result column="IP" property="IP" />
		<result column="STATUS" property="STATUS" />
		<result column="SKIN" property="SKIN" />
		<association property="role" column="ROLE_ID" javaType="Role">
			<id column="ROLE_ID" property="ROLE_ID" />
			<result column="ROLE_NAME" property="ROLE_NAME" />
			<result column="ROLE_RIGHTS" property="RIGHTS" />
		</association>
		<association property="department" column="DEPARTMENT_ID" javaType="Department">
			<id column="DEPARTMENT_ID" property="DEPARTMENT_ID" />
			<result column="NAME" property="NAME" />
			<result column="HEADMAN" property="HEADMAN" />
		</association>
	</resultMap>
	<resultMap type="User" id="userResultMap">
		<id column="USER_ID" property="USER_ID" />
		<result column="USERNAME" property="USERNAME" />
		<result column="NAME" property="NAME" />
		<result column="RIGHTS" property="RIGHTS" />
		<result column="LAST_LOGIN" property="LAST_LOGIN" />
		<result column="IP" property="IP" />
		<result column="STATUS" property="STATUS" />
		<result column="SKIN" property="SKIN" />
		<result column="EMAIL" property="ROLE_ID" />
		<result column="NUMBER" property="ROLE_ID" />
		<result column="PHONE" property="ROLE_ID" />
	</resultMap>
	
	<!-- 字段 -->
	<sql id="Base_Column_List">
		USER_ID,
		USERNAME,
		NAME,
		RIGHTS,
		LAST_LOGIN,
		IP,
		STATUS,
		SKIN,
		EMAIL,
		NUMBER,
		PHONE
	</sql>

	<!--表名 -->
	<sql id="tableName">
		SYS_USER
	</sql>
	<sql id="roleTableName">
		SYS_ROLE
	</sql>
	<sql id="departmentTableName">
		OA_DEPARTMENT
	</sql>

	<!-- 字段 -->
	<sql id="Field">
		USER_ID,
		USERNAME,
		PASSWORD,
		NAME,
		RIGHTS,
		ROLE_ID,
		LAST_LOGIN,
		IP,
		STATUS,
		BZ,
		SKIN,
		EMAIL,
		NUMBER,
		PHONE,
		DEPARTMENT_ID
	</sql>
 <!-- <insert id="saveUp" parameterType="User">
    insert into pms_pinformation (USER_ID,
		USERNAME,
		PASSWORD,
		NAME,
		RIGHTS,
		ROLE_ID,
		LAST_LOGIN,
		IP,
		STATUS,
		BZ,
		SKIN,
		EMAIL,
		NUMBER,
		PHONE,
		DEPARTMENT_ID)
    values (#{USER_ID,jdbcType=CHAR}, #{USERNAME,jdbcType=CHAR}, #{PASSWORD,jdbcType=NVARCHAR}, 
      #{NAME,jdbcType=NVARCHAR}, #{RIGHTS,jdbcType=NVARCHAR}, #{ROLE_ID,jdbcType=NVARCHAR}, 
      #{LAST_LOGIN,jdbcType=NVARCHAR}, #{IP,jdbcType=TIMESTAMP}, #{STATUS,jdbcType=TIMESTAMP}, 
      #{BZ,jdbcType=NVARCHAR}, #{SKIN,jdbcType=NVARCHAR}, #{EMAIL,jdbcType=NVARCHAR}, 
      #{NUMBER,jdbcType=NVARCHAR}, #{PHONE,jdbcType=NVARCHAR}, #{DEPARTMENT_ID,jdbcType=NVARCHAR})
  </insert> -->
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{USER_ID},
		#{USERNAME},
		#{PASSWORD},
		#{NAME},
		#{RIGHTS},
		#{ROLE_ID},
		#{LAST_LOGIN},
		#{IP},
		#{STATUS},
		#{BZ},
		#{SKIN},
		#{EMAIL},
		#{NUMBER},
		#{PHONE},
		#{DEPARTMENT_ID}
	</sql>
	<select id="getUsernameAndName"  parameterType="pd" resultType="pd">
		select USER_ID, USERNAME,name from 
		<include refid="tableName"></include>
		where USER_ID = #{USER_ID}

	</select>

	<!-- 判断用户名和密码 -->
	<select id="getUserInfo" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where 1=1
		<if test="USERNAME!=null and PASSWORD!=null">
			and USERNAME = #{USERNAME} and PASSWORD=#{PASSWORD}
		</if>
		<if test="USER_ID!=null and USER_ID>0">
			and USER_ID = #{USER_ID}
		</if>
	</select>

	<!-- 更新登录时间 -->
	<update id="updateLastLogin" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
		LAST_LOGIN = #{LAST_LOGIN}
		where USER_ID = #{USER_ID}
	</update>

	<!-- 通过用户ID获取用户信息和角色信息 -->
	<select id="getUserAndRoleById" parameterType="String"
		resultMap="userAndRoleResultMap">
		select u.USER_ID,
		u.USERNAME,
		u.NAME,
		u.RIGHTS as USER_RIGHTS,
		u.PASSWORD,
		u.SKIN,
		r.ROLE_ID,
		r.ROLE_NAME,
		r.RIGHTS as ROLE_RIGHTS
		from
		<include refid="tableName"></include>
		u
		left join
		<include refid="roleTableName"></include>
		r
		on u.ROLE_ID=r.ROLE_ID
		where u.STATUS=0
		and u.USER_ID=#{USER_ID}
	</select>

	<!-- 通过USERNAME获取数据 -->
	<select id="findByUsername" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where
		USERNAME = #{USERNAME}
	</select>

	<!-- 存入IP -->
	<update id="saveIP" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
		IP = #{IP}
		where
		USERNAME = #{USERNAME}
	</update>

	<!-- 列出某角色下的所有用户 -->
	<select id="listAllUserByRoldId" parameterType="pd" resultType="pd">
		select USER_ID,NAME
		from
		<include refid="tableName"></include>
		where
		ROLE_ID = #{ROLE_ID}
	</select>

	<!-- 用户列表 -->
	<select id="userlistPage" parameterType="page" resultType="pd">
		select u.USER_ID,
		u.USERNAME,
		u.PASSWORD,
		u.LAST_LOGIN,
		u.NAME,
		u.IP,
		u.EMAIL,
		u.NUMBER,
		u.PHONE,
		r.ROLE_ID,
		r.ROLE_NAME,
		w.DEPARTMENT_ID,
		w.NAME as DEPARTNAME
		
		from
		<include refid="departmentTableName"></include>
		w,
		<include refid="tableName"></include>
		u,
		<include refid="roleTableName"></include>
		r
		where u.ROLE_ID = r.ROLE_ID
		and u.DEPARTMENT_ID = w.DEPARTMENT_ID
		and u.USERNAME != 'admin'
		and r.PARENT_ID = '1'
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
			(
			u.USERNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			u.EMAIL LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			u.NUMBER LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			u.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			u.PHONE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			)
		</if>
		<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLE_ID=#{pd.ROLE_ID}
		</if>
		<if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &gt;= #{pd.lastLoginStart}
		</if>
		<if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &lt;= #{pd.lastLoginEnd}
		</if>
		[fhstart]order by u.LAST_LOGIN desc[fhend]
	</select>

	<!-- 通过邮箱获取数据 -->
	<select id="findByUE" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where
		EMAIL = #{EMAIL}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME}
		</if>
	</select>

	<!-- 通过编号获取数据 -->
	<select id="findByUN" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where
		NUMBER = #{NUMBER}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME}
		</if>
	</select>

	<!-- 通过user_id获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where
		USER_ID = #{USER_ID}
	</select>

	<!-- 新增用户 -->
	<insert id="saveU" parameterType="pd">
		insert into
		<include refid="tableName"></include>
		(
		<include refid="Field"></include>
		) values (
		<include refid="FieldValue"></include>
		)
	</insert>

	<!-- 修改 -->
	<update id="editU" parameterType="pd">
		update
		<include refid="tableName"></include>
		set NAME = #{NAME},
		ROLE_ID = #{ROLE_ID},
		BZ = #{BZ},
		EMAIL = #{EMAIL},
		NUMBER = #{NUMBER},
		PHONE = #{PHONE}
		<if test="PASSWORD != null and PASSWORD != ''">
			,PASSWORD = #{PASSWORD}
		</if>
		where
		USER_ID = #{USER_ID}
	</update>

	<!-- 删除用户 -->
	<delete id="deleteU" parameterType="pd" flushCache="false">
		delete from
		<include refid="tableName"></include>
		where
		USER_ID = #{USER_ID}
		and
		USER_ID &lt;&gt; '1'
	</delete>

	<!-- 批量删除用户 -->
	<delete id="deleteAllU" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where
		USER_ID in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
		and
		USER_ID &lt;&gt; '1'
	</delete>

	<!-- 用户列表(全部) -->
	<select id="listAllUser" parameterType="pd" resultType="pd">
		select u.USER_ID,
		u.USERNAME,
		u.PASSWORD,
		u.LAST_LOGIN,
		u.NAME,
		u.IP,
		u.EMAIL,
		u.NUMBER,
		u.PHONE,
		r.ROLE_ID,
		r.ROLE_NAME,
		w.DEPARTMENT_ID,
		w.NAME
		from
		<include refid="departmentTableName"></include>
		w,
		<include refid="tableName"></include>
		u,
		<include refid="roleTableName"></include>
		r
		where u.ROLE_ID = r.ROLE_ID
		and u.DEPARTMENT_ID = w.DEPARTMENT_ID
		and u.USERNAME != 'admin'
		and r.PARENT_ID = '1'
		<if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
			and
			(
			u.USERNAME LIKE CONCAT(CONCAT('%', #{keywords}),'%')
			or
			u.EMAIL LIKE CONCAT(CONCAT('%', #{keywords}),'%')
			or
			u.NUMBER LIKE CONCAT(CONCAT('%', #{keywords}),'%')
			or
			u.NAME LIKE CONCAT(CONCAT('%', #{keywords}),'%')
			or
			u.PHONE LIKE CONCAT(CONCAT('%', #{keywords}),'%')
			)
		</if>
		<if test="ROLE_ID != null and ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLE_ID=#{ROLE_ID}
		</if>
		<if test="lastLoginStart!=null and lastLoginStart!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &gt;= #{lastLoginStart}
		</if>
		<if test="lastLoginEnd!=null and lastLoginEnd!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &lt;= #{lastLoginEnd}
		</if>
		[fhstart]order by u.LAST_LOGIN desc[fhend]
	</select>

	<!-- 获取总数 -->
	<select id="getUserCount" parameterType="String" resultType="pd">
		select
		count(USER_ID) userCount
		from
		<include refid="tableName"></include>
	</select>




  <select id="selectByPrimaryKey" resultMap="userResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 25 10:19:43 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where USER_ID = #{userId,jdbcType=CHAR}
  </select>
</mapper>